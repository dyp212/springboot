<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pugutang.spring.boot.dao.newDao.PgtOrderStockBatchMapper">
  <resultMap id="BaseResultMap" type="com.pugutang.spring.boot.entity.PgtOrderStockBatch">
    <id column="order_stock_batch_id" jdbcType="INTEGER" property="orderStockBatchId" />
    <result column="order_sn" jdbcType="VARCHAR" property="orderSn" />
    <result column="record_id" jdbcType="INTEGER" property="recordId" />
    <result column="sku_id" jdbcType="INTEGER" property="skuId" />
    <result column="sku_name" jdbcType="VARCHAR" property="skuName" />
    <result column="sku_encode" jdbcType="VARCHAR" property="skuEncode" />
    <result column="batch_code" jdbcType="VARCHAR" property="batchCode" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="spec" jdbcType="VARCHAR" property="spec" />
    <result column="unit_name" jdbcType="VARCHAR" property="unitName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_stock_batch_id, order_sn, record_id, sku_id, sku_name, sku_encode, batch_code, 
    quantity, spec, unit_name
  </sql>
  <select id="selectByExample" parameterType="com.pugutang.spring.boot.entity.PgtOrderStockBatchExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from pgt_order_stock_batch
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pgt_order_stock_batch
    where order_stock_batch_id = #{orderStockBatchId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pgt_order_stock_batch
    where order_stock_batch_id = #{orderStockBatchId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pugutang.spring.boot.entity.PgtOrderStockBatchExample">
    delete from pgt_order_stock_batch
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pugutang.spring.boot.entity.PgtOrderStockBatch">
    insert into pgt_order_stock_batch (order_stock_batch_id, order_sn, record_id, 
      sku_id, sku_name, sku_encode, 
      batch_code, quantity, spec, 
      unit_name)
    values (#{orderStockBatchId,jdbcType=INTEGER}, #{orderSn,jdbcType=VARCHAR}, #{recordId,jdbcType=INTEGER}, 
      #{skuId,jdbcType=INTEGER}, #{skuName,jdbcType=VARCHAR}, #{skuEncode,jdbcType=VARCHAR}, 
      #{batchCode,jdbcType=VARCHAR}, #{quantity,jdbcType=INTEGER}, #{spec,jdbcType=VARCHAR}, 
      #{unitName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pugutang.spring.boot.entity.PgtOrderStockBatch">
    insert into pgt_order_stock_batch
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderStockBatchId != null">
        order_stock_batch_id,
      </if>
      <if test="orderSn != null">
        order_sn,
      </if>
      <if test="recordId != null">
        record_id,
      </if>
      <if test="skuId != null">
        sku_id,
      </if>
      <if test="skuName != null">
        sku_name,
      </if>
      <if test="skuEncode != null">
        sku_encode,
      </if>
      <if test="batchCode != null">
        batch_code,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="spec != null">
        spec,
      </if>
      <if test="unitName != null">
        unit_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderStockBatchId != null">
        #{orderStockBatchId,jdbcType=INTEGER},
      </if>
      <if test="orderSn != null">
        #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="recordId != null">
        #{recordId,jdbcType=INTEGER},
      </if>
      <if test="skuId != null">
        #{skuId,jdbcType=INTEGER},
      </if>
      <if test="skuName != null">
        #{skuName,jdbcType=VARCHAR},
      </if>
      <if test="skuEncode != null">
        #{skuEncode,jdbcType=VARCHAR},
      </if>
      <if test="batchCode != null">
        #{batchCode,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="spec != null">
        #{spec,jdbcType=VARCHAR},
      </if>
      <if test="unitName != null">
        #{unitName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pugutang.spring.boot.entity.PgtOrderStockBatchExample" resultType="java.lang.Long">
    select count(*) from pgt_order_stock_batch
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pgt_order_stock_batch
    <set>
      <if test="record.orderStockBatchId != null">
        order_stock_batch_id = #{record.orderStockBatchId,jdbcType=INTEGER},
      </if>
      <if test="record.orderSn != null">
        order_sn = #{record.orderSn,jdbcType=VARCHAR},
      </if>
      <if test="record.recordId != null">
        record_id = #{record.recordId,jdbcType=INTEGER},
      </if>
      <if test="record.skuId != null">
        sku_id = #{record.skuId,jdbcType=INTEGER},
      </if>
      <if test="record.skuName != null">
        sku_name = #{record.skuName,jdbcType=VARCHAR},
      </if>
      <if test="record.skuEncode != null">
        sku_encode = #{record.skuEncode,jdbcType=VARCHAR},
      </if>
      <if test="record.batchCode != null">
        batch_code = #{record.batchCode,jdbcType=VARCHAR},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.spec != null">
        spec = #{record.spec,jdbcType=VARCHAR},
      </if>
      <if test="record.unitName != null">
        unit_name = #{record.unitName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pgt_order_stock_batch
    set order_stock_batch_id = #{record.orderStockBatchId,jdbcType=INTEGER},
      order_sn = #{record.orderSn,jdbcType=VARCHAR},
      record_id = #{record.recordId,jdbcType=INTEGER},
      sku_id = #{record.skuId,jdbcType=INTEGER},
      sku_name = #{record.skuName,jdbcType=VARCHAR},
      sku_encode = #{record.skuEncode,jdbcType=VARCHAR},
      batch_code = #{record.batchCode,jdbcType=VARCHAR},
      quantity = #{record.quantity,jdbcType=INTEGER},
      spec = #{record.spec,jdbcType=VARCHAR},
      unit_name = #{record.unitName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pugutang.spring.boot.entity.PgtOrderStockBatch">
    update pgt_order_stock_batch
    <set>
      <if test="orderSn != null">
        order_sn = #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="recordId != null">
        record_id = #{recordId,jdbcType=INTEGER},
      </if>
      <if test="skuId != null">
        sku_id = #{skuId,jdbcType=INTEGER},
      </if>
      <if test="skuName != null">
        sku_name = #{skuName,jdbcType=VARCHAR},
      </if>
      <if test="skuEncode != null">
        sku_encode = #{skuEncode,jdbcType=VARCHAR},
      </if>
      <if test="batchCode != null">
        batch_code = #{batchCode,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="spec != null">
        spec = #{spec,jdbcType=VARCHAR},
      </if>
      <if test="unitName != null">
        unit_name = #{unitName,jdbcType=VARCHAR},
      </if>
    </set>
    where order_stock_batch_id = #{orderStockBatchId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pugutang.spring.boot.entity.PgtOrderStockBatch">
    update pgt_order_stock_batch
    set order_sn = #{orderSn,jdbcType=VARCHAR},
      record_id = #{recordId,jdbcType=INTEGER},
      sku_id = #{skuId,jdbcType=INTEGER},
      sku_name = #{skuName,jdbcType=VARCHAR},
      sku_encode = #{skuEncode,jdbcType=VARCHAR},
      batch_code = #{batchCode,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=INTEGER},
      spec = #{spec,jdbcType=VARCHAR},
      unit_name = #{unitName,jdbcType=VARCHAR}
    where order_stock_batch_id = #{orderStockBatchId,jdbcType=INTEGER}
  </update>
  
    <select id="selectList" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select * from pgt_order_stock_batch where record_id = #{record_id}
  </select>  
</mapper>