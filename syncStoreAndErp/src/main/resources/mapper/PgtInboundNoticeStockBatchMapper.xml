<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pugutang.spring.boot.dao.newDao.PgtInboundNoticeStockBatchMapper">
  <resultMap id="BaseResultMap" type="com.pugutang.spring.boot.entity.PgtInboundNoticeStockBatch">
    <id column="inbound_notice_stock_batch_id" jdbcType="INTEGER" property="inboundNoticeStockBatchId" />
    <result column="inbound_notice_code" jdbcType="VARCHAR" property="inboundNoticeCode" />
    <result column="notice_detail_id" jdbcType="BIGINT" property="noticeDetailId" />
    <result column="sku_id" jdbcType="INTEGER" property="skuId" />
    <result column="sku_name" jdbcType="VARCHAR" property="skuName" />
    <result column="sku_encode" jdbcType="VARCHAR" property="skuEncode" />
    <result column="batch_code" jdbcType="VARCHAR" property="batchCode" />
    <result column="quantity" jdbcType="DOUBLE" property="quantity" />
    <result column="spec" jdbcType="VARCHAR" property="spec" />
    <result column="unit_name" jdbcType="VARCHAR" property="unitName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    inbound_notice_stock_batch_id, inbound_notice_code, notice_detail_id, sku_id, sku_name, 
    sku_encode, batch_code, quantity, spec, unit_name
  </sql>
  <select id="selectByExample" parameterType="com.pugutang.spring.boot.entity.PgtInboundNoticeStockBatchExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from pgt_inbound_notice_stock_batch
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pgt_inbound_notice_stock_batch
    where inbound_notice_stock_batch_id = #{inboundNoticeStockBatchId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pgt_inbound_notice_stock_batch
    where inbound_notice_stock_batch_id = #{inboundNoticeStockBatchId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pugutang.spring.boot.entity.PgtInboundNoticeStockBatchExample">
    delete from pgt_inbound_notice_stock_batch
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pugutang.spring.boot.entity.PgtInboundNoticeStockBatch">
    insert into pgt_inbound_notice_stock_batch (inbound_notice_stock_batch_id, inbound_notice_code, 
      notice_detail_id, sku_id, sku_name, 
      sku_encode, batch_code, quantity, 
      spec, unit_name)
    values (#{inboundNoticeStockBatchId,jdbcType=INTEGER}, #{inboundNoticeCode,jdbcType=VARCHAR}, 
      #{noticeDetailId,jdbcType=BIGINT}, #{skuId,jdbcType=INTEGER}, #{skuName,jdbcType=VARCHAR}, 
      #{skuEncode,jdbcType=VARCHAR}, #{batchCode,jdbcType=VARCHAR}, #{quantity,jdbcType=DOUBLE}, 
      #{spec,jdbcType=VARCHAR}, #{unitName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pugutang.spring.boot.entity.PgtInboundNoticeStockBatch">
    insert into pgt_inbound_notice_stock_batch
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="inboundNoticeStockBatchId != null">
        inbound_notice_stock_batch_id,
      </if>
      <if test="inboundNoticeCode != null">
        inbound_notice_code,
      </if>
      <if test="noticeDetailId != null">
        notice_detail_id,
      </if>
      <if test="skuId != null">
        sku_id,
      </if>
      <if test="skuName != null">
        sku_name,
      </if>
      <if test="skuEncode != null">
        sku_encode,
      </if>
      <if test="batchCode != null">
        batch_code,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="spec != null">
        spec,
      </if>
      <if test="unitName != null">
        unit_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="inboundNoticeStockBatchId != null">
        #{inboundNoticeStockBatchId,jdbcType=INTEGER},
      </if>
      <if test="inboundNoticeCode != null">
        #{inboundNoticeCode,jdbcType=VARCHAR},
      </if>
      <if test="noticeDetailId != null">
        #{noticeDetailId,jdbcType=BIGINT},
      </if>
      <if test="skuId != null">
        #{skuId,jdbcType=INTEGER},
      </if>
      <if test="skuName != null">
        #{skuName,jdbcType=VARCHAR},
      </if>
      <if test="skuEncode != null">
        #{skuEncode,jdbcType=VARCHAR},
      </if>
      <if test="batchCode != null">
        #{batchCode,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=DOUBLE},
      </if>
      <if test="spec != null">
        #{spec,jdbcType=VARCHAR},
      </if>
      <if test="unitName != null">
        #{unitName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pugutang.spring.boot.entity.PgtInboundNoticeStockBatchExample" resultType="java.lang.Long">
    select count(*) from pgt_inbound_notice_stock_batch
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pgt_inbound_notice_stock_batch
    <set>
      <if test="record.inboundNoticeStockBatchId != null">
        inbound_notice_stock_batch_id = #{record.inboundNoticeStockBatchId,jdbcType=INTEGER},
      </if>
      <if test="record.inboundNoticeCode != null">
        inbound_notice_code = #{record.inboundNoticeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.noticeDetailId != null">
        notice_detail_id = #{record.noticeDetailId,jdbcType=BIGINT},
      </if>
      <if test="record.skuId != null">
        sku_id = #{record.skuId,jdbcType=INTEGER},
      </if>
      <if test="record.skuName != null">
        sku_name = #{record.skuName,jdbcType=VARCHAR},
      </if>
      <if test="record.skuEncode != null">
        sku_encode = #{record.skuEncode,jdbcType=VARCHAR},
      </if>
      <if test="record.batchCode != null">
        batch_code = #{record.batchCode,jdbcType=VARCHAR},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=DOUBLE},
      </if>
      <if test="record.spec != null">
        spec = #{record.spec,jdbcType=VARCHAR},
      </if>
      <if test="record.unitName != null">
        unit_name = #{record.unitName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pgt_inbound_notice_stock_batch
    set inbound_notice_stock_batch_id = #{record.inboundNoticeStockBatchId,jdbcType=INTEGER},
      inbound_notice_code = #{record.inboundNoticeCode,jdbcType=VARCHAR},
      notice_detail_id = #{record.noticeDetailId,jdbcType=BIGINT},
      sku_id = #{record.skuId,jdbcType=INTEGER},
      sku_name = #{record.skuName,jdbcType=VARCHAR},
      sku_encode = #{record.skuEncode,jdbcType=VARCHAR},
      batch_code = #{record.batchCode,jdbcType=VARCHAR},
      quantity = #{record.quantity,jdbcType=DOUBLE},
      spec = #{record.spec,jdbcType=VARCHAR},
      unit_name = #{record.unitName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pugutang.spring.boot.entity.PgtInboundNoticeStockBatch">
    update pgt_inbound_notice_stock_batch
    <set>
      <if test="inboundNoticeCode != null">
        inbound_notice_code = #{inboundNoticeCode,jdbcType=VARCHAR},
      </if>
      <if test="noticeDetailId != null">
        notice_detail_id = #{noticeDetailId,jdbcType=BIGINT},
      </if>
      <if test="skuId != null">
        sku_id = #{skuId,jdbcType=INTEGER},
      </if>
      <if test="skuName != null">
        sku_name = #{skuName,jdbcType=VARCHAR},
      </if>
      <if test="skuEncode != null">
        sku_encode = #{skuEncode,jdbcType=VARCHAR},
      </if>
      <if test="batchCode != null">
        batch_code = #{batchCode,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=DOUBLE},
      </if>
      <if test="spec != null">
        spec = #{spec,jdbcType=VARCHAR},
      </if>
      <if test="unitName != null">
        unit_name = #{unitName,jdbcType=VARCHAR},
      </if>
    </set>
    where inbound_notice_stock_batch_id = #{inboundNoticeStockBatchId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pugutang.spring.boot.entity.PgtInboundNoticeStockBatch">
    update pgt_inbound_notice_stock_batch
    set inbound_notice_code = #{inboundNoticeCode,jdbcType=VARCHAR},
      notice_detail_id = #{noticeDetailId,jdbcType=BIGINT},
      sku_id = #{skuId,jdbcType=INTEGER},
      sku_name = #{skuName,jdbcType=VARCHAR},
      sku_encode = #{skuEncode,jdbcType=VARCHAR},
      batch_code = #{batchCode,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=DOUBLE},
      spec = #{spec,jdbcType=VARCHAR},
      unit_name = #{unitName,jdbcType=VARCHAR}
    where inbound_notice_stock_batch_id = #{inboundNoticeStockBatchId,jdbcType=INTEGER}
  </update>
</mapper>