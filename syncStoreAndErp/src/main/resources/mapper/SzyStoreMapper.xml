<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pugutang.spring.boot.dao.newDao.SzyStoreMapper">
  <resultMap id="BaseResultMap" type="com.pugutang.spring.boot.entity.SzyStore">
    <id column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="store_sn" jdbcType="VARCHAR" property="storeSn" />
    <result column="store_name" jdbcType="VARCHAR" property="storeName" />
    <result column="store_type_id" jdbcType="INTEGER" property="storeTypeId" />
    <result column="contact" jdbcType="VARCHAR" property="contact" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="region_code" jdbcType="VARCHAR" property="regionCode" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="store_status" jdbcType="BIT" property="storeStatus" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="admin_id" jdbcType="INTEGER" property="adminId" />
    <result column="store_type_sort" jdbcType="TINYINT" property="storeTypeSort" />
    <result column="bad_store_id" jdbcType="INTEGER" property="badStoreId" />
    <result column="bad_store_name" jdbcType="VARCHAR" property="badStoreName" />
    <result column="logistic_store_id" jdbcType="INTEGER" property="logisticStoreId" />
    <result column="logistic_store_name" jdbcType="VARCHAR" property="logisticStoreName" />
    <result column="parent_store_id" jdbcType="INTEGER" property="parentStoreId" />
    <result column="parent_store_name" jdbcType="VARCHAR" property="parentStoreName" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.pugutang.spring.boot.entity.SzyStore">
    <result column="store_remark" jdbcType="LONGVARCHAR" property="storeRemark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    store_id, store_sn, store_name, store_type_id, contact, tel, region_code, address, 
    store_status, is_deleted, admin_id, store_type_sort, bad_store_id, bad_store_name, 
    logistic_store_id, logistic_store_name, parent_store_id, parent_store_name
  </sql>
  <sql id="Blob_Column_List">
    store_remark
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.pugutang.spring.boot.entity.SzyStoreExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from szy_store
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.pugutang.spring.boot.entity.SzyStoreExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from szy_store
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from szy_store
    where store_id = #{storeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from szy_store
    where store_id = #{storeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pugutang.spring.boot.entity.SzyStoreExample">
    delete from szy_store
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pugutang.spring.boot.entity.SzyStore">
    insert into szy_store (store_id, store_sn, store_name, 
      store_type_id, contact, tel, 
      region_code, address, store_status, 
      is_deleted, admin_id, store_type_sort, 
      bad_store_id, bad_store_name, logistic_store_id, 
      logistic_store_name, parent_store_id, parent_store_name, 
      store_remark)
    values (#{storeId,jdbcType=INTEGER}, #{storeSn,jdbcType=VARCHAR}, #{storeName,jdbcType=VARCHAR}, 
      #{storeTypeId,jdbcType=INTEGER}, #{contact,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, 
      #{regionCode,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{storeStatus,jdbcType=BIT}, 
      #{isDeleted,jdbcType=BIT}, #{adminId,jdbcType=INTEGER}, #{storeTypeSort,jdbcType=TINYINT}, 
      #{badStoreId,jdbcType=INTEGER}, #{badStoreName,jdbcType=VARCHAR}, #{logisticStoreId,jdbcType=INTEGER}, 
      #{logisticStoreName,jdbcType=VARCHAR}, #{parentStoreId,jdbcType=INTEGER}, #{parentStoreName,jdbcType=VARCHAR}, 
      #{storeRemark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pugutang.spring.boot.entity.SzyStore">
    insert into szy_store
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="storeId != null">
        store_id,
      </if>
      <if test="storeSn != null">
        store_sn,
      </if>
      <if test="storeName != null">
        store_name,
      </if>
      <if test="storeTypeId != null">
        store_type_id,
      </if>
      <if test="contact != null">
        contact,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="regionCode != null">
        region_code,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="storeStatus != null">
        store_status,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="adminId != null">
        admin_id,
      </if>
      <if test="storeTypeSort != null">
        store_type_sort,
      </if>
      <if test="badStoreId != null">
        bad_store_id,
      </if>
      <if test="badStoreName != null">
        bad_store_name,
      </if>
      <if test="logisticStoreId != null">
        logistic_store_id,
      </if>
      <if test="logisticStoreName != null">
        logistic_store_name,
      </if>
      <if test="parentStoreId != null">
        parent_store_id,
      </if>
      <if test="parentStoreName != null">
        parent_store_name,
      </if>
      <if test="storeRemark != null">
        store_remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="storeSn != null">
        #{storeSn,jdbcType=VARCHAR},
      </if>
      <if test="storeName != null">
        #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="storeTypeId != null">
        #{storeTypeId,jdbcType=INTEGER},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="regionCode != null">
        #{regionCode,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="storeStatus != null">
        #{storeStatus,jdbcType=BIT},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="adminId != null">
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="storeTypeSort != null">
        #{storeTypeSort,jdbcType=TINYINT},
      </if>
      <if test="badStoreId != null">
        #{badStoreId,jdbcType=INTEGER},
      </if>
      <if test="badStoreName != null">
        #{badStoreName,jdbcType=VARCHAR},
      </if>
      <if test="logisticStoreId != null">
        #{logisticStoreId,jdbcType=INTEGER},
      </if>
      <if test="logisticStoreName != null">
        #{logisticStoreName,jdbcType=VARCHAR},
      </if>
      <if test="parentStoreId != null">
        #{parentStoreId,jdbcType=INTEGER},
      </if>
      <if test="parentStoreName != null">
        #{parentStoreName,jdbcType=VARCHAR},
      </if>
      <if test="storeRemark != null">
        #{storeRemark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pugutang.spring.boot.entity.SzyStoreExample" resultType="java.lang.Long">
    select count(*) from szy_store
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update szy_store
    <set>
      <if test="record.storeId != null">
        store_id = #{record.storeId,jdbcType=INTEGER},
      </if>
      <if test="record.storeSn != null">
        store_sn = #{record.storeSn,jdbcType=VARCHAR},
      </if>
      <if test="record.storeName != null">
        store_name = #{record.storeName,jdbcType=VARCHAR},
      </if>
      <if test="record.storeTypeId != null">
        store_type_id = #{record.storeTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.contact != null">
        contact = #{record.contact,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.regionCode != null">
        region_code = #{record.regionCode,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.storeStatus != null">
        store_status = #{record.storeStatus,jdbcType=BIT},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="record.adminId != null">
        admin_id = #{record.adminId,jdbcType=INTEGER},
      </if>
      <if test="record.storeTypeSort != null">
        store_type_sort = #{record.storeTypeSort,jdbcType=TINYINT},
      </if>
      <if test="record.badStoreId != null">
        bad_store_id = #{record.badStoreId,jdbcType=INTEGER},
      </if>
      <if test="record.badStoreName != null">
        bad_store_name = #{record.badStoreName,jdbcType=VARCHAR},
      </if>
      <if test="record.logisticStoreId != null">
        logistic_store_id = #{record.logisticStoreId,jdbcType=INTEGER},
      </if>
      <if test="record.logisticStoreName != null">
        logistic_store_name = #{record.logisticStoreName,jdbcType=VARCHAR},
      </if>
      <if test="record.parentStoreId != null">
        parent_store_id = #{record.parentStoreId,jdbcType=INTEGER},
      </if>
      <if test="record.parentStoreName != null">
        parent_store_name = #{record.parentStoreName,jdbcType=VARCHAR},
      </if>
      <if test="record.storeRemark != null">
        store_remark = #{record.storeRemark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update szy_store
    set store_id = #{record.storeId,jdbcType=INTEGER},
      store_sn = #{record.storeSn,jdbcType=VARCHAR},
      store_name = #{record.storeName,jdbcType=VARCHAR},
      store_type_id = #{record.storeTypeId,jdbcType=INTEGER},
      contact = #{record.contact,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      region_code = #{record.regionCode,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      store_status = #{record.storeStatus,jdbcType=BIT},
      is_deleted = #{record.isDeleted,jdbcType=BIT},
      admin_id = #{record.adminId,jdbcType=INTEGER},
      store_type_sort = #{record.storeTypeSort,jdbcType=TINYINT},
      bad_store_id = #{record.badStoreId,jdbcType=INTEGER},
      bad_store_name = #{record.badStoreName,jdbcType=VARCHAR},
      logistic_store_id = #{record.logisticStoreId,jdbcType=INTEGER},
      logistic_store_name = #{record.logisticStoreName,jdbcType=VARCHAR},
      parent_store_id = #{record.parentStoreId,jdbcType=INTEGER},
      parent_store_name = #{record.parentStoreName,jdbcType=VARCHAR},
      store_remark = #{record.storeRemark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update szy_store
    set store_id = #{record.storeId,jdbcType=INTEGER},
      store_sn = #{record.storeSn,jdbcType=VARCHAR},
      store_name = #{record.storeName,jdbcType=VARCHAR},
      store_type_id = #{record.storeTypeId,jdbcType=INTEGER},
      contact = #{record.contact,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      region_code = #{record.regionCode,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      store_status = #{record.storeStatus,jdbcType=BIT},
      is_deleted = #{record.isDeleted,jdbcType=BIT},
      admin_id = #{record.adminId,jdbcType=INTEGER},
      store_type_sort = #{record.storeTypeSort,jdbcType=TINYINT},
      bad_store_id = #{record.badStoreId,jdbcType=INTEGER},
      bad_store_name = #{record.badStoreName,jdbcType=VARCHAR},
      logistic_store_id = #{record.logisticStoreId,jdbcType=INTEGER},
      logistic_store_name = #{record.logisticStoreName,jdbcType=VARCHAR},
      parent_store_id = #{record.parentStoreId,jdbcType=INTEGER},
      parent_store_name = #{record.parentStoreName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pugutang.spring.boot.entity.SzyStore">
    update szy_store
    <set>
      <if test="storeSn != null">
        store_sn = #{storeSn,jdbcType=VARCHAR},
      </if>
      <if test="storeName != null">
        store_name = #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="storeTypeId != null">
        store_type_id = #{storeTypeId,jdbcType=INTEGER},
      </if>
      <if test="contact != null">
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="regionCode != null">
        region_code = #{regionCode,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="storeStatus != null">
        store_status = #{storeStatus,jdbcType=BIT},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="adminId != null">
        admin_id = #{adminId,jdbcType=INTEGER},
      </if>
      <if test="storeTypeSort != null">
        store_type_sort = #{storeTypeSort,jdbcType=TINYINT},
      </if>
      <if test="badStoreId != null">
        bad_store_id = #{badStoreId,jdbcType=INTEGER},
      </if>
      <if test="badStoreName != null">
        bad_store_name = #{badStoreName,jdbcType=VARCHAR},
      </if>
      <if test="logisticStoreId != null">
        logistic_store_id = #{logisticStoreId,jdbcType=INTEGER},
      </if>
      <if test="logisticStoreName != null">
        logistic_store_name = #{logisticStoreName,jdbcType=VARCHAR},
      </if>
      <if test="parentStoreId != null">
        parent_store_id = #{parentStoreId,jdbcType=INTEGER},
      </if>
      <if test="parentStoreName != null">
        parent_store_name = #{parentStoreName,jdbcType=VARCHAR},
      </if>
      <if test="storeRemark != null">
        store_remark = #{storeRemark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where store_id = #{storeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.pugutang.spring.boot.entity.SzyStore">
    update szy_store
    set store_sn = #{storeSn,jdbcType=VARCHAR},
      store_name = #{storeName,jdbcType=VARCHAR},
      store_type_id = #{storeTypeId,jdbcType=INTEGER},
      contact = #{contact,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      region_code = #{regionCode,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      store_status = #{storeStatus,jdbcType=BIT},
      is_deleted = #{isDeleted,jdbcType=BIT},
      admin_id = #{adminId,jdbcType=INTEGER},
      store_type_sort = #{storeTypeSort,jdbcType=TINYINT},
      bad_store_id = #{badStoreId,jdbcType=INTEGER},
      bad_store_name = #{badStoreName,jdbcType=VARCHAR},
      logistic_store_id = #{logisticStoreId,jdbcType=INTEGER},
      logistic_store_name = #{logisticStoreName,jdbcType=VARCHAR},
      parent_store_id = #{parentStoreId,jdbcType=INTEGER},
      parent_store_name = #{parentStoreName,jdbcType=VARCHAR},
      store_remark = #{storeRemark,jdbcType=LONGVARCHAR}
    where store_id = #{storeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pugutang.spring.boot.entity.SzyStore">
    update szy_store
    set store_sn = #{storeSn,jdbcType=VARCHAR},
      store_name = #{storeName,jdbcType=VARCHAR},
      store_type_id = #{storeTypeId,jdbcType=INTEGER},
      contact = #{contact,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      region_code = #{regionCode,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      store_status = #{storeStatus,jdbcType=BIT},
      is_deleted = #{isDeleted,jdbcType=BIT},
      admin_id = #{adminId,jdbcType=INTEGER},
      store_type_sort = #{storeTypeSort,jdbcType=TINYINT},
      bad_store_id = #{badStoreId,jdbcType=INTEGER},
      bad_store_name = #{badStoreName,jdbcType=VARCHAR},
      logistic_store_id = #{logisticStoreId,jdbcType=INTEGER},
      logistic_store_name = #{logisticStoreName,jdbcType=VARCHAR},
      parent_store_id = #{parentStoreId,jdbcType=INTEGER},
      parent_store_name = #{parentStoreName,jdbcType=VARCHAR}
    where store_id = #{storeId,jdbcType=INTEGER}
  </update>

  <select id="selectList" parameterType="com.pugutang.spring.boot.entity.SzyStore" resultMap="BaseResultMap" >
      select * from szy_store where store_id = #{store_id}
  </select>       
  
</mapper>