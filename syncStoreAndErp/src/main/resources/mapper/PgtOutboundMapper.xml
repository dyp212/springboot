<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pugutang.spring.boot.dao.newDao.PgtOutboundMapper">
  <resultMap id="BaseResultMap" type="com.pugutang.spring.boot.entity.PgtOutbound">
    <id column="out_bound_id" jdbcType="BIGINT" property="outBoundId" />
    <result column="out_bound_code" jdbcType="VARCHAR" property="outBoundCode" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="purchase_code" jdbcType="VARCHAR" property="purchaseCode" />
    <result column="purchase_detail_id" jdbcType="BIGINT" property="purchaseDetailId" />
    <result column="outbound_notice_code" jdbcType="VARCHAR" property="outboundNoticeCode" />
    <result column="outbound_notice_detail_id" jdbcType="BIGINT" property="outboundNoticeDetailId" />
    <result column="business_time" jdbcType="TIMESTAMP" property="businessTime" />
    <result column="store_sn" jdbcType="VARCHAR" property="storeSn" />
    <result column="store_name" jdbcType="VARCHAR" property="storeName" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="createby" jdbcType="VARCHAR" property="createby" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateby" jdbcType="VARCHAR" property="updateby" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    out_bound_id, out_bound_code, type, purchase_code, purchase_detail_id, outbound_notice_code, 
    outbound_notice_detail_id, business_time, store_sn, store_name, status, createby, 
    create_time, updateby, update_time
  </sql>
  <select id="selectByExample" parameterType="com.pugutang.spring.boot.entity.PgtOutboundExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from pgt_outbound
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pgt_outbound
    where out_bound_id = #{outBoundId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from pgt_outbound
    where out_bound_id = #{outBoundId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.pugutang.spring.boot.entity.PgtOutboundExample">
    delete from pgt_outbound
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pugutang.spring.boot.entity.PgtOutbound">
    insert into pgt_outbound (out_bound_id, out_bound_code, type, 
      purchase_code, purchase_detail_id, outbound_notice_code, 
      outbound_notice_detail_id, business_time, 
      store_sn, store_name, status, 
      createby, create_time, updateby, 
      update_time)
    values (#{outBoundId,jdbcType=BIGINT}, #{outBoundCode,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, 
      #{purchaseCode,jdbcType=VARCHAR}, #{purchaseDetailId,jdbcType=BIGINT}, #{outboundNoticeCode,jdbcType=VARCHAR}, 
      #{outboundNoticeDetailId,jdbcType=BIGINT}, #{businessTime,jdbcType=TIMESTAMP}, 
      #{storeSn,jdbcType=VARCHAR}, #{storeName,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{createby,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateby,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.pugutang.spring.boot.entity.PgtOutbound">
    insert into pgt_outbound
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="outBoundId != null">
        out_bound_id,
      </if>
      <if test="outBoundCode != null">
        out_bound_code,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="purchaseCode != null">
        purchase_code,
      </if>
      <if test="purchaseDetailId != null">
        purchase_detail_id,
      </if>
      <if test="outboundNoticeCode != null">
        outbound_notice_code,
      </if>
      <if test="outboundNoticeDetailId != null">
        outbound_notice_detail_id,
      </if>
      <if test="businessTime != null">
        business_time,
      </if>
      <if test="storeSn != null">
        store_sn,
      </if>
      <if test="storeName != null">
        store_name,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createby != null">
        createby,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateby != null">
        updateby,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="outBoundId != null">
        #{outBoundId,jdbcType=BIGINT},
      </if>
      <if test="outBoundCode != null">
        #{outBoundCode,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="purchaseCode != null">
        #{purchaseCode,jdbcType=VARCHAR},
      </if>
      <if test="purchaseDetailId != null">
        #{purchaseDetailId,jdbcType=BIGINT},
      </if>
      <if test="outboundNoticeCode != null">
        #{outboundNoticeCode,jdbcType=VARCHAR},
      </if>
      <if test="outboundNoticeDetailId != null">
        #{outboundNoticeDetailId,jdbcType=BIGINT},
      </if>
      <if test="businessTime != null">
        #{businessTime,jdbcType=TIMESTAMP},
      </if>
      <if test="storeSn != null">
        #{storeSn,jdbcType=VARCHAR},
      </if>
      <if test="storeName != null">
        #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createby != null">
        #{createby,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateby != null">
        #{updateby,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pugutang.spring.boot.entity.PgtOutboundExample" resultType="java.lang.Long">
    select count(*) from pgt_outbound
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pgt_outbound
    <set>
      <if test="record.outBoundId != null">
        out_bound_id = #{record.outBoundId,jdbcType=BIGINT},
      </if>
      <if test="record.outBoundCode != null">
        out_bound_code = #{record.outBoundCode,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.purchaseCode != null">
        purchase_code = #{record.purchaseCode,jdbcType=VARCHAR},
      </if>
      <if test="record.purchaseDetailId != null">
        purchase_detail_id = #{record.purchaseDetailId,jdbcType=BIGINT},
      </if>
      <if test="record.outboundNoticeCode != null">
        outbound_notice_code = #{record.outboundNoticeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.outboundNoticeDetailId != null">
        outbound_notice_detail_id = #{record.outboundNoticeDetailId,jdbcType=BIGINT},
      </if>
      <if test="record.businessTime != null">
        business_time = #{record.businessTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.storeSn != null">
        store_sn = #{record.storeSn,jdbcType=VARCHAR},
      </if>
      <if test="record.storeName != null">
        store_name = #{record.storeName,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createby != null">
        createby = #{record.createby,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateby != null">
        updateby = #{record.updateby,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pgt_outbound
    set out_bound_id = #{record.outBoundId,jdbcType=BIGINT},
      out_bound_code = #{record.outBoundCode,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=TINYINT},
      purchase_code = #{record.purchaseCode,jdbcType=VARCHAR},
      purchase_detail_id = #{record.purchaseDetailId,jdbcType=BIGINT},
      outbound_notice_code = #{record.outboundNoticeCode,jdbcType=VARCHAR},
      outbound_notice_detail_id = #{record.outboundNoticeDetailId,jdbcType=BIGINT},
      business_time = #{record.businessTime,jdbcType=TIMESTAMP},
      store_sn = #{record.storeSn,jdbcType=VARCHAR},
      store_name = #{record.storeName,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      createby = #{record.createby,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      updateby = #{record.updateby,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pugutang.spring.boot.entity.PgtOutbound">
    update pgt_outbound
    <set>
      <if test="outBoundCode != null">
        out_bound_code = #{outBoundCode,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="purchaseCode != null">
        purchase_code = #{purchaseCode,jdbcType=VARCHAR},
      </if>
      <if test="purchaseDetailId != null">
        purchase_detail_id = #{purchaseDetailId,jdbcType=BIGINT},
      </if>
      <if test="outboundNoticeCode != null">
        outbound_notice_code = #{outboundNoticeCode,jdbcType=VARCHAR},
      </if>
      <if test="outboundNoticeDetailId != null">
        outbound_notice_detail_id = #{outboundNoticeDetailId,jdbcType=BIGINT},
      </if>
      <if test="businessTime != null">
        business_time = #{businessTime,jdbcType=TIMESTAMP},
      </if>
      <if test="storeSn != null">
        store_sn = #{storeSn,jdbcType=VARCHAR},
      </if>
      <if test="storeName != null">
        store_name = #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createby != null">
        createby = #{createby,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateby != null">
        updateby = #{updateby,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where out_bound_id = #{outBoundId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pugutang.spring.boot.entity.PgtOutbound">
    update pgt_outbound
    set out_bound_code = #{outBoundCode,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      purchase_code = #{purchaseCode,jdbcType=VARCHAR},
      purchase_detail_id = #{purchaseDetailId,jdbcType=BIGINT},
      outbound_notice_code = #{outboundNoticeCode,jdbcType=VARCHAR},
      outbound_notice_detail_id = #{outboundNoticeDetailId,jdbcType=BIGINT},
      business_time = #{businessTime,jdbcType=TIMESTAMP},
      store_sn = #{storeSn,jdbcType=VARCHAR},
      store_name = #{storeName,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      createby = #{createby,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      updateby = #{updateby,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where out_bound_id = #{outBoundId,jdbcType=BIGINT}
  </update>
</mapper>